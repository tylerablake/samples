
@{
    ViewBag.Title = "Mvc Overview";
}

<h2>MVC Overview</h2>

<p>In this section of the walkthrough we'll talk about the following:</p>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <ul>
                <li>What is MVC?</li>
            </ul>
        </div>
        <div class="col-md-6">
            <ul>
                <li>What does the MVC lifecycle look like?</li>
            </ul>
        </div>
    </div>
</div>

<h4>What is MVC?</h4>
<p>MVC is an architecture pattern used in many modern web applications to help structure the solution and follow some best practices in development, like the S.O.L.I.D principles.</p>

<p>MVC is made up of 3 parts <b>M</b>odels, <b>V</b>iews, and <b>C</b>ontrollers.</p>

<b>What is a model?</b>
<p>A model in the MVC architecture are the data objects that you will be storing in the database.</p>

<b>What is a view?</b>
<p>A view in the MVC architecture is the UI, it is simply what you see.</p>

<b>What is a controller?</b>
<p>A controller in the MVC architecture handles routing for the application.</p>
<p>For basic applications some business logic might live here but it is better to have a <b>service</b> layer to handle data retrieval and business logic.</p>

<h4>What does the MVC lifecycle look like?</h4>
<p>Below is a diagram showing the MVC request lifecycle. I'll also try to give an explanation of the lifecycle.</p>
<p>Coming soon!</p>

<p>Now let's look at how to start a .NET MVC project.</p>
<p>@Html.ActionLink("Creating a Project", "CreatingAProject", "Home", new { @class = "btn btn-primary" })</p>
